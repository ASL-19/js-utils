{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.10.4",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@asl-19/js-utils!",
  "docComment": "/**\n * A collection of plain JavaScript utility functions for ASL19 projects.\n *\n * These functions don’t rely on DOM, React, or React Native APIs.\n *\n * @packageDocumentation\n */\n",
  "name": "@asl-19/js-utils",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@asl-19/js-utils!",
      "name": "",
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@asl-19/js-utils!cleanUrlQueryString:var",
          "docComment": "/**\n * Returns a URL with trailing \"?\" and \"&\" characters removed.\n *\n * e.g.:\n *\n * - \"/foo?\" → \"/foo\" - \"/foo?bar&\" → \"/foo?bar\"\n *\n * @param url - URL\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "cleanUrlQueryString: "
            },
            {
              "kind": "Content",
              "text": "(url: string) => string"
            }
          ],
          "releaseTag": "Public",
          "name": "cleanUrlQueryString",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@asl-19/js-utils!getRootRelativeUrl:var",
          "docComment": "/**\n * Given a fully-qualified URL, returns a root-relative URL.\n *\n * e.g.:\n *\n * - \"https://asl19.org/\" → \"/\" - \"https://asl19.org/foo\" → \"/foo\"\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getRootRelativeUrl: "
            },
            {
              "kind": "Content",
              "text": "(fullyQualifiedUrl: string) => string"
            }
          ],
          "releaseTag": "Public",
          "name": "getRootRelativeUrl",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@asl-19/js-utils!isNullOrWhitespace:var",
          "docComment": "/**\n * Returns true if string is null, an empty string, or a string of whitespace characters.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNullOrWhitespace: "
            },
            {
              "kind": "Content",
              "text": "(input: string) => boolean"
            }
          ],
          "releaseTag": "Public",
          "name": "isNullOrWhitespace",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@asl-19/js-utils!replaceArabicNumeralsWithPersianNumerals:var",
          "docComment": "/**\n * Replace Arabic (Hindu–Arabic/Western Arabic/Latin) numerals with Persian (Perso-Arabic) numerals.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "replaceArabicNumeralsWithPersianNumerals: "
            },
            {
              "kind": "Content",
              "text": "(input: string) => string"
            }
          ],
          "releaseTag": "Public",
          "name": "replaceArabicNumeralsWithPersianNumerals",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@asl-19/js-utils!underscoreCaseToCamelCase:var",
          "docComment": "/**\n * Given an underscore-cased string, returns a camel-cased string.\n *\n * e.g.:\n *\n * - foo_bar → fooBar - foo → foo\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "underscoreCaseToCamelCase: "
            },
            {
              "kind": "Content",
              "text": "(underscoreCasedString: string) => string"
            }
          ],
          "releaseTag": "Public",
          "name": "underscoreCaseToCamelCase",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
