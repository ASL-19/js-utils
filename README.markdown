# @asl-19/js-utils

Shared JavaScript utility functions for [ASL19](https://asl19.org/) projects.

See [`docs/js-utils.md`](./docs/js-utils.md) for API documentation.

## Install

```sh
npm install @asl-19/js-utils
```

## Development

This package is developed with Node.js 18 (the active LTS [release](https://nodejs.org/en/about/releases/) as of 2023-08).

In this folder:

```sh
# Watch src and build into dist/cjs and dist/esm on change
npm run dev
```

If you add a new function or making a change to the arguments of an existing function (without this TypeScript won’t be aware of the changes, and the `build-lint-test` script will fail):

```sh
# Update api-extractor/* (metadata about code generated by api-extractor) and docs/* (Markdown documentation generated by api-documenter using api-extractor metadata)
npm run api-extractor-update
```

In a project that uses `js-utils`:

```sh
# Replace project‘s copy of js-utils with local version
npm link /absolute/path/to/js-utils
```

After running `npm link` you’ll see something like `"@asl-19/js-utils": "file:../../../js-utils"` in your project’s `package.json`, with corresponding changes in `package-lock.json`. And if you look at the project’s `node_modules/@asl-19/js-utils` you’ll see that it’s a [symlink](https://en.wikipedia.org/wiki/Symbolic_link) to the path provided to `npm link`. This means that any changes built into the `dist` directory will immediately apply to the project it’s linked into.

Once you’re finished testing make sure you reset your `package.json` and `package-lock.json`, then run `npm install` to revert to the published copy of the package.
